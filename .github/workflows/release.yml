name: Release

on:
  release:
    types:
      - published

jobs:
  release:
    name: Release Dash Network Deploy
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU to run multi-arch builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.9.1
          install: true
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set suffix
        uses: actions/github-script@v6
        id: suffix
        with:
          result-encoding: string
          script: |
            const fullTag = context.payload.release.tag_name;
            if (fullTag.includes('-')) {
              const [, fullSuffix] = fullTag.split('-');
              const [suffix] = fullSuffix.split('.');
              return `-${suffix}`;
            } else {
              return '';
            }

      - name: Set Docker tags and labels
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: dashpay/multifaucet
          tags: |
            type=match,pattern=v(\d+),group=1,value=${{ github.ref_name }}
            type=match,pattern=v(\d+.\d+),group=1,value=${{ github.ref_name }}
            type=match,pattern=v(\d+.\d+.\d+),group=1,value=${{ github.ref_name }}
            type=match,pattern=v(.*),group=1,value=${{ github.ref_name }},suffix=
          flavor: |
            suffix=${{ steps.suffix.outputs.result }},onlatest=true

      - name: Build and push Docker image for Drive
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Show Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
